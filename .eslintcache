[{"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js":"1","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js":"2","S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js":"3","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js":"4","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js":"5","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js":"6","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js":"7","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js":"8","S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js":"9","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js":"10","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js":"11","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js":"12","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js":"13","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\createComp.js":"14","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Container.js":"15","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EditButton.js":"16","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\AppToolsData.js":"17","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Col.js":"18","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\contentStateHelpers.js":"19","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\contReducerConstants.js":"20","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\index.js":"21","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\EmptyBlock.js":"22","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\navReducerConstants.js":"23","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\ToolsDrawer.js":"24"},{"size":571,"mtime":1613983454954,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1021,"mtime":1614144816455,"results":"28","hashOfConfig":"26"},{"size":265,"mtime":1612761594791,"results":"29","hashOfConfig":"26"},{"size":1049,"mtime":1613958188597,"results":"30","hashOfConfig":"26"},{"size":142,"mtime":1612146062465,"results":"31","hashOfConfig":"26"},{"size":1656,"mtime":1613984080887,"results":"32","hashOfConfig":"26"},{"size":5149,"mtime":1614142013464,"results":"33","hashOfConfig":"26"},{"size":416,"mtime":1611122304047,"results":"34","hashOfConfig":"26"},{"size":2880,"mtime":1614144850127,"results":"35","hashOfConfig":"26"},{"size":519,"mtime":1613983611002,"results":"36","hashOfConfig":"26"},{"size":294,"mtime":1613624292705,"results":"37","hashOfConfig":"26"},{"size":1966,"mtime":1613892823943,"results":"38","hashOfConfig":"26"},{"size":449,"mtime":1613537171896,"results":"39","hashOfConfig":"26"},{"size":1989,"mtime":1613892816117,"results":"40","hashOfConfig":"26"},{"size":1942,"mtime":1613956845107,"results":"41","hashOfConfig":"26"},{"size":491,"mtime":1613625047828,"results":"42","hashOfConfig":"26"},{"size":1665,"mtime":1613890004359,"results":"43","hashOfConfig":"26"},{"size":1670,"mtime":1613974781127,"results":"44","hashOfConfig":"26"},{"size":370,"mtime":1613893179277,"results":"45","hashOfConfig":"26"},{"size":195,"mtime":1613536963738,"results":"46","hashOfConfig":"26"},{"size":683,"mtime":1613623314040,"results":"47","hashOfConfig":"26"},{"size":105,"mtime":1613959438161,"results":"48","hashOfConfig":"26"},{"size":4143,"mtime":1614148206573,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1370067",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js",[],["106","107"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js",["108"],"import { produce } from 'immer';\r\nimport {\r\n    insertComponent,\r\n    deleteComponent,\r\n    moveComponent,\r\n    newComponent\r\n} from '../helpers/contentStateHelpers';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { ROOT_COMP, INIT_STATE } from '../data/contReducerConstants';\r\n\r\nconst contentReducer = produce((draft, action) => {\r\n    switch (action.type) {\r\n        case \"BODY_COMPONENTS/GET\":\r\n            newComponent(draft, 'Container', ROOT_COMP, null);\r\n            return\r\n        case \"EDIT/INSERT\":\r\n            insertComponent(draft, uuid(), ...action.payload);\r\n            return\r\n        case \"EDIT/DELETE\":\r\n            deleteComponent(draft, action.payload);\r\n            return\r\n        case \"EDIT/MOVE\":\r\n            moveComponent(draft, ...action.payload);\r\n            return\r\n        case \"EDIT/SELECTED_COMP\":\r\n            draft.selected = action.payload;\r\n            return\r\n        case \"EDIT/TOGGLE\":\r\n            draft.editing = !draft.editing;\r\n            return\r\n    }\r\n}, INIT_STATE);\r\n\r\n\r\nexport default contentReducer;","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js",["109"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js",["110","111"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js",["112"],"import { produce } from 'immer';\r\nimport { INIT_STATE } from '../data/navReducerConstants';\r\n\r\nconst navReducer = produce((draft, action) => {\r\n    switch (action.type) {\r\n        case \"NAV/TOGGLE\":\r\n            draft.navIsOpen = !draft.navIsOpen;\r\n            return\r\n        case \"TOOLS/TOGGLE\":\r\n            draft.toolsOpen = !draft.toolsOpen;\r\n            return\r\n        case \"TOOLS/SET_VIEW\":\r\n            draft.toolsView = action.payload;\r\n            return\r\n    }\r\n}, INIT_STATE);\r\n\r\nexport default navReducer;","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js",["113"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Row } from 'reactstrap';\r\nimport EditButton from '../EditButton';\r\nimport * as comp from './';\r\nimport { contActions } from '../../actions';\r\n\r\nclass RowComp extends React.Component {\r\n\r\n    style() {\r\n        var style={padding: \"10px\", margin: \"0\"};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.children.length) {\r\n            this.props.insertComp('Col', this.props.id, null);\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <Row style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Row\" parentId={this.props.id} childId={null} />}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Row>);\r\n    }\r\n}\r\n\r\n\r\nRowComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string,\r\n    insertComp: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n});\r\n\r\nexport default connect(mapStateToProps, { insertComp: contActions.insertComp })(RowComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\createComp.js",[],["114","115"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Container.js",["116"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Container } from 'reactstrap';\r\nimport EditButton from '../EditButton';\r\nimport * as comp from './';\r\nimport { contActions } from '../../actions';\r\n\r\nclass ContainerComp extends React.Component {\r\n\r\n    style() {\r\n        var style={padding: \"10px\"};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.children.length) {\r\n            this.props.insertComp('Row', this.props.id, null);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Container\" parentId={this.props.id} childId={null}/>}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Container>);\r\n    }\r\n}\r\n\r\n\r\nContainerComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string,\r\n    insertComp: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { insertComp: contActions.insertComp })(ContainerComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EditButton.js",["117","118"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { ROOT_COMP } from '../data/contReducerConstants';\r\nimport { contActions, navActions } from '../actions';\r\nimport {\r\n    Container, Row, Col,\r\n    UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem,\r\n} from 'reactstrap';\r\n\r\nclass EditButton extends React.Component {\r\n\r\n    handleSelect() {\r\n        this.props.selectedComp(this.props.parentId);\r\n        this.props.setToolsView(this.props.compName);\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.deleteComp(this.props.parentId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <UncontrolledDropdown >\r\n                    <DropdownToggle >\r\n                        \\\r\n                    </DropdownToggle>\r\n                    <DropdownMenu style={{textAlign: \"center\"}}>\r\n                        <DropdownItem header style={{borderBottom: \"3px solid ghostwhite\"}}>{this.props.compName}</DropdownItem>\r\n                        <DropdownItem onClick={() => this.handleSelect()}>edit</DropdownItem>\r\n                        {(this.props.parentId !== ROOT_COMP) && (<DropdownItem onClick={() => this.handleDelete()}>delete</DropdownItem>)}\r\n                    </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nEditButton.propTypes = {\r\n    setToolsView: PropTypes.func.isRequired,\r\n    selectedComp: PropTypes.func.isRequired,\r\n    parentId: PropTypes.string.isRequired,\r\n    childId: PropTypes.string,\r\n    compName: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contentState: state.contentState,\r\n    toolsOpen: state.navState.toolsOpen\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    deleteComp: contActions.deleteComp,\r\n    selectedComp: contActions.selectedComp,\r\n    setToolsView: navActions.setToolsView\r\n})(EditButton);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\AppToolsData.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Col.js",["119"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport EditButton from '../EditButton';\r\nimport { Col } from 'reactstrap';\r\nimport * as comp from './';\r\n\r\nclass ColComp extends React.Component {\r\n\r\n    style() {\r\n        var style={};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Col style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Col\" parentId={this.props.id} childId={null} />}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nColComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ColComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\contentStateHelpers.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\contReducerConstants.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\EmptyBlock.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\navReducerConstants.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\ToolsDrawer.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":12,"column":5,"nodeType":"126","messageId":"127","endLine":31,"endColumn":6},{"ruleId":"128","severity":1,"message":"129","line":117,"column":11,"nodeType":"130","messageId":"131","endLine":117,"endColumn":20},{"ruleId":"128","severity":1,"message":"132","line":10,"column":7,"nodeType":"130","messageId":"131","endLine":10,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":46,"column":8,"nodeType":"135","endLine":46,"endColumn":10,"suggestions":"136"},{"ruleId":"124","severity":1,"message":"125","line":5,"column":5,"nodeType":"126","messageId":"127","endLine":15,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":20,"column":33,"nodeType":"139","messageId":"140","endLine":20,"endColumn":35},{"ruleId":"120","replacedBy":"141"},{"ruleId":"122","replacedBy":"142"},{"ruleId":"137","severity":1,"message":"138","line":20,"column":33,"nodeType":"139","messageId":"140","endLine":20,"endColumn":35},{"ruleId":"128","severity":1,"message":"143","line":7,"column":16,"nodeType":"130","messageId":"131","endLine":7,"endColumn":19},{"ruleId":"128","severity":1,"message":"144","line":7,"column":21,"nodeType":"130","messageId":"131","endLine":7,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":19,"column":33,"nodeType":"139","messageId":"140","endLine":19,"endColumn":35},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'toggleNav' is assigned a value but never used.","Identifier","unusedVar","'transitions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["147"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["145"],["146"],"'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [props]",{"range":"150","text":"151"},[1110,1112],"[props]"]