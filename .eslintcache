[{"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js":"1","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js":"2","S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js":"3","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js":"4","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js":"5","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js":"6","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js":"7","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js":"8","S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js":"9","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js":"10","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppTools.js":"11","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js":"12","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js":"13","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EmptyBlock.js":"14","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js":"15","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\createComp.js":"16","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Container.js":"17","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EditButton.js":"18","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\AppToolsData.js":"19","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Col.js":"20","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\contentStateHelpers.js":"21","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\contReducerConstants.js":"22"},{"size":620,"mtime":1611122220767,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":807,"mtime":1613263170072,"results":"26","hashOfConfig":"24"},{"size":265,"mtime":1612761594791,"results":"27","hashOfConfig":"24"},{"size":1591,"mtime":1613462677000,"results":"28","hashOfConfig":"24"},{"size":142,"mtime":1612146062465,"results":"29","hashOfConfig":"24"},{"size":1505,"mtime":1613449001316,"results":"30","hashOfConfig":"24"},{"size":2996,"mtime":1613271683815,"results":"31","hashOfConfig":"24"},{"size":416,"mtime":1611122304047,"results":"32","hashOfConfig":"24"},{"size":782,"mtime":1613461494110,"results":"33","hashOfConfig":"24"},{"size":3034,"mtime":1613448548047,"results":"34","hashOfConfig":"24"},{"size":418,"mtime":1613266996743,"results":"35","hashOfConfig":"24"},{"size":176,"mtime":1613345215048,"results":"36","hashOfConfig":"24"},{"size":738,"mtime":1613458522933,"results":"37","hashOfConfig":"24"},{"size":421,"mtime":1612767811287,"results":"38","hashOfConfig":"24"},{"size":441,"mtime":1613462647150,"results":"39","hashOfConfig":"24"},{"size":1313,"mtime":1613462555880,"results":"40","hashOfConfig":"24"},{"size":1249,"mtime":1613457990168,"results":"41","hashOfConfig":"24"},{"size":328,"mtime":1613440760239,"results":"42","hashOfConfig":"24"},{"size":329,"mtime":1613458563717,"results":"43","hashOfConfig":"24"},{"size":2461,"mtime":1613449165572,"results":"44","hashOfConfig":"24"},{"size":378,"mtime":1613459717773,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1370067",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js",[],["96","97"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js",["98"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js",["99"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { navActions, contActions } from '../actions';\r\nimport { \r\n    Collapse,\r\n    Navbar, Nav, NavbarToggler, NavbarBrand, NavItem, NavLink,\r\n    UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem,\r\n    Container\r\n} from 'reactstrap';\r\n\r\nclass AppNavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.props.toggleNav();\r\n    }\r\n\r\n    handleEditing() {\r\n        this.props.toggleTools();\r\n        this.props.toggleEditing();\r\n    }\r\n\r\n    render() {\r\n        let dropdownInner = [\r\n            <DropdownToggle>:)</DropdownToggle>,\r\n            <DropdownMenu>\r\n                <DropdownItem header>Hi, Luke</DropdownItem>\r\n                <DropdownItem onClick={() => this.handleEditing()}>Edit Page</DropdownItem>\r\n            </DropdownMenu>\r\n        ];\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\">\r\n                    <Container fluid>\r\n                        <NavbarBrand href=\"/\">\r\n                            Spades\r\n                        </NavbarBrand>\r\n                        <NavbarToggler onClick={() => this.toggleNav()} />\r\n                        <UncontrolledDropdown nav className=\"d-block d-sm-none\">\r\n                            {dropdownInner}\r\n                        </UncontrolledDropdown>\r\n                        <Collapse isOpen={this.props.navIsOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/\">\r\n                                        Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/\">\r\n                                        Word\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                        {/* <NavbarToggler className=\"d-none d-sm-block\" onClick={() => this.toggleTools()} /> */}\r\n                        <UncontrolledDropdown nav className=\"d-none d-sm-block\">\r\n                            {dropdownInner}\r\n                        </UncontrolledDropdown>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAppNavBar.propTypes = {\r\n    toggleNav: PropTypes.func.isRequired,\r\n    toggleTools: PropTypes.func.isRequired,\r\n    toggleEditing: PropTypes.func.isRequired,\r\n    navIsOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    navIsOpen: state.navState.navIsOpen\r\n})\r\n\r\n\r\n export default connect(mapStateToProps, {\r\n     toggleNav: navActions.toggleNav,\r\n     toggleTools: navActions.toggleTools,\r\n     toggleEditing: contActions.toggleEditing\r\n})(AppNavBar);","S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppTools.js",["100","101","102","103"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { navActions, contActions } from '../actions';\r\nimport { AppToolsData } from '../data/AppToolsData';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { \r\n    Collapse,\r\n    Navbar, Nav, NavItem, NavLink, NavbarText,\r\n    Container, Row, Col,\r\n    Button,\r\n    Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\n\r\nclass AppTools extends React.Component {\r\n \r\n    handleClose() {\r\n        this.props.toggleTools();\r\n        this.props.toggleEditing();\r\n    }\r\n    \r\n    handleClick({ onClick, input }) {\r\n        switch (onClick) {\r\n            case 'replacePlaceholder':\r\n                this.props.replacePlaceholder(input, this.props.placeholderId);\r\n                break;\r\n            default:\r\n                console.log(`No case for ${onClick}`);\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <CSSTransition \r\n                in={this.props.toolsOpen} \r\n                timeout={200}\r\n                classNames=\"tools\"\r\n                unmountOnExit={true}>        \r\n                    <Navbar className=\"tools rounded\" color=\"light\" light>\r\n                        <Container className=\"pr-0 pl-0\">\r\n                            <Button\r\n                                close \r\n                                className=\"position-absolute\"\r\n                                style={{alignSelf: \"end\"}}\r\n                                onClick={() => this.handleClose()} />\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem active>\r\n                                    Components\r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <Nav navbar>\r\n                                {AppToolsData['Container'].map(item => (\r\n                                    <NavItem>\r\n                                        <NavLink onClick={() => this.handleClick(item)}>\r\n                                            {item.text}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                ))}\r\n                            </Nav>\r\n                        </Container>\r\n                    </Navbar>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAppTools.propTypes = {\r\n    toolsOpen: PropTypes.bool.isRequired,\r\n    placeholderId: PropTypes.string.isRequired,\r\n    toggleTools: PropTypes.func.isRequired,\r\n    toggleEditing: PropTypes.func.isRequired,\r\n    replacePlaceholder: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    toolsOpen: state.navState.toolsOpen,\r\n    placeholderId: state.contentState.placeholderId\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    toggleTools: navActions.toggleTools,\r\n    toggleEditing: contActions.toggleEditing,\r\n    replacePlaceholder: contActions.replacePlaceholder,\r\n})(AppTools);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EmptyBlock.js",["104"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    Container, \r\n    Button \r\n} from 'reactstrap';\r\n\r\nclass EmptyBlock extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"border rounded\" style={{width: \"100%\", height: \"100px\", backgroundColor: \"ghostwhite\"}}>\r\n                <span>~~~~~ Add component here ~~~~~</span>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nEmptyBlock.propTypes = {\r\n    key: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contentState: state.contentState,\r\n    toolsOpen: state.navState.toolsOpen\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(EmptyBlock);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js",["105"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row } from 'reactstrap';\r\n\r\nclass RowComp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    componentDidMount() {\r\n    }\r\n    \r\n    render() {\r\n        return (<Row>Here's a row I guess! Wow!</Row>);\r\n    }\r\n}\r\n\r\n\r\nRowComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default RowComp;",["106","107"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\createComp.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Container.js",["108","109","110","111"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EditButton.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\AppToolsData.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Col.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\contentStateHelpers.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\contReducerConstants.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":13,"column":5,"nodeType":"122","messageId":"123","endLine":15,"endColumn":6},{"ruleId":"116","severity":1,"message":"124","line":8,"column":5,"nodeType":"118","messageId":"119","endLine":8,"endColumn":13},{"ruleId":"116","severity":1,"message":"125","line":9,"column":36,"nodeType":"118","messageId":"119","endLine":9,"endColumn":46},{"ruleId":"116","severity":1,"message":"126","line":10,"column":16,"nodeType":"118","messageId":"119","endLine":10,"endColumn":19},{"ruleId":"116","severity":1,"message":"127","line":10,"column":21,"nodeType":"118","messageId":"119","endLine":10,"endColumn":24},{"ruleId":"116","severity":1,"message":"128","line":6,"column":5,"nodeType":"118","messageId":"119","endLine":6,"endColumn":11},{"ruleId":"120","severity":1,"message":"121","line":6,"column":5,"nodeType":"122","messageId":"123","endLine":8,"endColumn":6},{"ruleId":"112","replacedBy":"129"},{"ruleId":"114","replacedBy":"130"},{"ruleId":"116","severity":1,"message":"126","line":4,"column":21,"nodeType":"118","messageId":"119","endLine":4,"endColumn":24},{"ruleId":"116","severity":1,"message":"127","line":4,"column":26,"nodeType":"118","messageId":"119","endLine":4,"endColumn":29},{"ruleId":"116","severity":1,"message":"131","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":10,"column":5,"nodeType":"122","messageId":"123","endLine":12,"endColumn":6},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Collapse' is defined but never used.","'NavbarText' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.",["132"],["133"],"'EmptyBlock' is defined but never used.","no-global-assign","no-unsafe-negation"]