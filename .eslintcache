[{"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js":"1","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js":"2","S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js":"3","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js":"4","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js":"5","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js":"6","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js":"7","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js":"8","S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js":"9","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js":"10","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppTools.js":"11","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js":"12","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js":"13","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EmptyBlock.js":"14","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js":"15"},{"size":620,"mtime":1611122220767,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":789,"mtime":1612238995464,"results":"19","hashOfConfig":"17"},{"size":265,"mtime":1612761594791,"results":"20","hashOfConfig":"17"},{"size":1227,"mtime":1612767767459,"results":"21","hashOfConfig":"17"},{"size":142,"mtime":1612146062465,"results":"22","hashOfConfig":"17"},{"size":373,"mtime":1612767616499,"results":"23","hashOfConfig":"17"},{"size":2247,"mtime":1612660627894,"results":"24","hashOfConfig":"17"},{"size":416,"mtime":1611122304047,"results":"25","hashOfConfig":"17"},{"size":833,"mtime":1612767072898,"results":"26","hashOfConfig":"17"},{"size":1622,"mtime":1612668117310,"results":"27","hashOfConfig":"17"},{"size":417,"mtime":1612244675652,"results":"28","hashOfConfig":"17"},{"size":176,"mtime":1612244553966,"results":"29","hashOfConfig":"17"},{"size":678,"mtime":1612767403175,"results":"30","hashOfConfig":"17"},{"size":421,"mtime":1612767811287,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1370067",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js",[],["65","66"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js",["67"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js",["68"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { navActions } from '../actions';\r\nimport { \r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container\r\n} from 'reactstrap';\r\n\r\nclass AppNavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.props.toggleNav();\r\n    }\r\n\r\n    toggleTools() {\r\n        this.props.toggleTools();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\">\r\n                    <Container fluid>\r\n                        <NavbarBrand href=\"/\">\r\n                            Spades\r\n                        </NavbarBrand>\r\n                        <NavbarToggler onClick={() => this.toggleNav()} />\r\n                        <NavbarToggler className=\"d-block d-sm-none\" onClick={() => this.toggleTools()} />\r\n                        <Collapse isOpen={this.props.navIsOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/\">\r\n                                        Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/\">\r\n                                        Word\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                        <NavbarToggler className=\"d-none d-sm-block\" onClick={() => this.toggleTools()} />\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAppNavBar.propTypes = {\r\n    toggleNav: PropTypes.func.isRequired,\r\n    toggleTools: PropTypes.func.isRequired,\r\n    navIsOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    navIsOpen: state.navState.navIsOpen\r\n})\r\n\r\n\r\n export default connect(mapStateToProps, {\r\n     toggleNav: navActions.toggleNav,\r\n     toggleTools: navActions.toggleTools \r\n})(AppNavBar);","S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppTools.js",["69","70","71","72","73","74"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { \r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    NavbarText,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\n\r\nclass AppTools extends React.Component {\r\n \r\n    render(){\r\n        return (\r\n            <div>\r\n                <CSSTransition \r\n                in={this.props.toolsOpen} \r\n                timeout={200}\r\n                classNames=\"tools\"\r\n                unmountOnExit={true}>        \r\n                    <Navbar className=\"tools rounded\" color=\"light\" light>\r\n                        <Container>\r\n                            <NavbarText className=\"mb-3 border-bottom\">\r\n                                Tools\r\n                            </NavbarText>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink onClick={() => alert('hey')}>\r\n                                        Word\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Container>\r\n                    </Navbar>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAppTools.propTypes = {\r\n    toolsOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    toolsOpen: state.navState.toolsOpen\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {})(AppTools);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EmptyBlock.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":6,"column":7,"nodeType":"82","messageId":"83","endLine":6,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":17,"column":5,"nodeType":"86","messageId":"87","endLine":19,"endColumn":6},{"ruleId":"80","severity":1,"message":"88","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":25},{"ruleId":"80","severity":1,"message":"89","line":6,"column":5,"nodeType":"82","messageId":"83","endLine":6,"endColumn":13},{"ruleId":"80","severity":1,"message":"90","line":8,"column":5,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"80","severity":1,"message":"91","line":9,"column":5,"nodeType":"82","messageId":"83","endLine":9,"endColumn":16},{"ruleId":"80","severity":1,"message":"92","line":15,"column":5,"nodeType":"82","messageId":"83","endLine":15,"endColumn":8},{"ruleId":"80","severity":1,"message":"93","line":16,"column":5,"nodeType":"82","messageId":"83","endLine":16,"endColumn":8},{"ruleId":"84","severity":1,"message":"85","line":6,"column":5,"nodeType":"86","messageId":"87","endLine":8,"endColumn":6},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'connectState' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'TransitionGroup' is defined but never used.","'Collapse' is defined but never used.","'NavbarToggler' is defined but never used.","'NavbarBrand' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]