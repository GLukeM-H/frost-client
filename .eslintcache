[{"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js":"1","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js":"2","S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js":"3","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js":"4","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js":"5","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js":"6","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js":"7","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js":"8","S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js":"9","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js":"10","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppTools.js":"11","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js":"12","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js":"13","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js":"14","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\createComp.js":"15","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Container.js":"16","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EditButton.js":"17","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\AppToolsData.js":"18","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Col.js":"19","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\contentStateHelpers.js":"20","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\contReducerConstants.js":"21","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\index.js":"22","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\EmptyBlock.js":"23","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\navReducerConstants.js":"24"},{"size":616,"mtime":1613538555025,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":807,"mtime":1613263170072,"results":"28","hashOfConfig":"26"},{"size":265,"mtime":1612761594791,"results":"29","hashOfConfig":"26"},{"size":1049,"mtime":1613958188597,"results":"30","hashOfConfig":"26"},{"size":142,"mtime":1612146062465,"results":"31","hashOfConfig":"26"},{"size":1594,"mtime":1613893306917,"results":"32","hashOfConfig":"26"},{"size":2840,"mtime":1613538606020,"results":"33","hashOfConfig":"26"},{"size":416,"mtime":1611122304047,"results":"34","hashOfConfig":"26"},{"size":1119,"mtime":1613538050036,"results":"35","hashOfConfig":"26"},{"size":3592,"mtime":1613893476328,"results":"36","hashOfConfig":"26"},{"size":510,"mtime":1613624448409,"results":"37","hashOfConfig":"26"},{"size":294,"mtime":1613624292705,"results":"38","hashOfConfig":"26"},{"size":1966,"mtime":1613892823943,"results":"39","hashOfConfig":"26"},{"size":449,"mtime":1613537171896,"results":"40","hashOfConfig":"26"},{"size":1989,"mtime":1613892816117,"results":"41","hashOfConfig":"26"},{"size":1942,"mtime":1613956845107,"results":"42","hashOfConfig":"26"},{"size":491,"mtime":1613625047828,"results":"43","hashOfConfig":"26"},{"size":1665,"mtime":1613890004359,"results":"44","hashOfConfig":"26"},{"size":1641,"mtime":1613958235139,"results":"45","hashOfConfig":"26"},{"size":370,"mtime":1613893179277,"results":"46","hashOfConfig":"26"},{"size":195,"mtime":1613536963738,"results":"47","hashOfConfig":"26"},{"size":683,"mtime":1613623314040,"results":"48","hashOfConfig":"26"},{"size":104,"mtime":1613627048248,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1370067",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js",[],["104","105"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js",["106"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppTools.js",["107","108","109","110","111","112"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { navActions, contActions } from '../actions';\r\nimport { AppToolsData } from '../data/AppToolsData';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { \r\n    Collapse,\r\n    Navbar, Nav, NavItem, NavLink, NavbarText,\r\n    Container, Row, Col,\r\n    Button,\r\n    Breadcrumb, BreadcrumbItem, NavbarBrand\r\n} from 'reactstrap';\r\n\r\nclass AppTools extends React.Component {\r\n\r\n    view = {\r\n        Components: [(\r\n            <NavItem key={1}>\r\n                <Button color=\"primary\" onClick={() => this.handleClick('Container')}>\r\n                    + Add Container\r\n                </Button>\r\n            </NavItem>),\r\n            <NavItem key={2}>\r\n                <NavbarText>adds a container to the dom</NavbarText>\r\n            </NavItem>\r\n        ],\r\n        Container: [(\r\n            <NavItem key={1}>\r\n                <Button color=\"primary\" onClick={() => this.handleClick('Row')}>\r\n                    + Add Row\r\n                </Button>\r\n            </NavItem>\r\n        )],\r\n        Row: [(\r\n            <NavItem key={1}>\r\n                <Button color=\"primary\" onClick={() => this.handleClick('Col')}>\r\n                    + Add Column\r\n                </Button>\r\n            </NavItem>\r\n        )],\r\n        Col: [(\r\n            <NavItem key={1}>\r\n                <Button color=\"primary\" onClick={() => this.handleClick('Container')}>\r\n                    + Add Container\r\n                </Button>\r\n            </NavItem>\r\n        )]\r\n    }\r\n \r\n    handleClose() {\r\n        this.props.toggleTools();\r\n        this.props.toggleEditing();\r\n    }\r\n    \r\n    handleClick(compName) {\r\n        this.props.insertComp(compName, this.props.selected);\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <CSSTransition \r\n                in={this.props.toolsOpen} \r\n                timeout={200}\r\n                classNames=\"tools\"\r\n                unmountOnExit={true}>        \r\n                    <Navbar className=\"tools rounded\" color=\"light\" light>\r\n                        <Container className=\"pr-0 pl-0\">\r\n                            <Button\r\n                                close \r\n                                className=\"position-absolute\"\r\n                                style={{alignSelf: \"end\"}}\r\n                                onClick={() => this.handleClose()} />\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem active>\r\n                                    Components\r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <Nav navbar>\r\n                                {this.view[this.props.toolsView]}\r\n                            </Nav>\r\n                        </Container>\r\n                    </Navbar>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAppTools.propTypes = {\r\n    toolsOpen: PropTypes.bool.isRequired,\r\n    toolsView: PropTypes.string.isRequired,\r\n    toggleTools: PropTypes.func.isRequired,\r\n    toggleEditing: PropTypes.func.isRequired,\r\n    insertComp: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    toolsOpen: state.navState.toolsOpen,\r\n    toolsView: state.navState.toolsView,\r\n    selected: state.contentState.selected\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    toggleTools: navActions.toggleTools,\r\n    toggleEditing: contActions.toggleEditing,\r\n    insertComp: contActions.insertComp,\r\n})(AppTools);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js",["113"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Row } from 'reactstrap';\r\nimport EditButton from '../EditButton';\r\nimport * as comp from './';\r\nimport { contActions } from '../../actions';\r\n\r\nclass RowComp extends React.Component {\r\n\r\n    style() {\r\n        var style={padding: \"10px\", margin: \"0\"};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.children.length) {\r\n            this.props.insertComp('Col', this.props.id, null);\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <Row style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Row\" parentId={this.props.id} childId={null} />}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Row>);\r\n    }\r\n}\r\n\r\n\r\nRowComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string,\r\n    insertComp: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n});\r\n\r\nexport default connect(mapStateToProps, { insertComp: contActions.insertComp })(RowComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\createComp.js",[],["114","115"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Container.js",["116"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Container } from 'reactstrap';\r\nimport EditButton from '../EditButton';\r\nimport * as comp from './';\r\nimport { contActions } from '../../actions';\r\n\r\nclass ContainerComp extends React.Component {\r\n\r\n    style() {\r\n        var style={padding: \"10px\"};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.children.length) {\r\n            this.props.insertComp('Row', this.props.id, null);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Container\" parentId={this.props.id} childId={null}/>}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Container>);\r\n    }\r\n}\r\n\r\n\r\nContainerComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string,\r\n    insertComp: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { insertComp: contActions.insertComp })(ContainerComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EditButton.js",["117","118"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\AppToolsData.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Col.js",["119"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport EditButton from '../EditButton';\r\nimport { Col } from 'reactstrap';\r\nimport * as comp from './';\r\n\r\nclass ColComp extends React.Component {\r\n\r\n    style() {\r\n        var style={};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Col style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Col\" parentId={this.props.id} childId={null} />}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nColComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ColComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\contentStateHelpers.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\contReducerConstants.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\EmptyBlock.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\navReducerConstants.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":12,"column":5,"nodeType":"126","messageId":"127","endLine":31,"endColumn":6},{"ruleId":"128","severity":1,"message":"129","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":22},{"ruleId":"128","severity":1,"message":"132","line":8,"column":5,"nodeType":"130","messageId":"131","endLine":8,"endColumn":13},{"ruleId":"128","severity":1,"message":"133","line":9,"column":27,"nodeType":"130","messageId":"131","endLine":9,"endColumn":34},{"ruleId":"128","severity":1,"message":"134","line":10,"column":16,"nodeType":"130","messageId":"131","endLine":10,"endColumn":19},{"ruleId":"128","severity":1,"message":"135","line":10,"column":21,"nodeType":"130","messageId":"131","endLine":10,"endColumn":24},{"ruleId":"128","severity":1,"message":"136","line":12,"column":33,"nodeType":"130","messageId":"131","endLine":12,"endColumn":44},{"ruleId":"137","severity":1,"message":"138","line":20,"column":33,"nodeType":"139","messageId":"140","endLine":20,"endColumn":35},{"ruleId":"120","replacedBy":"141"},{"ruleId":"122","replacedBy":"142"},{"ruleId":"137","severity":1,"message":"138","line":20,"column":33,"nodeType":"139","messageId":"140","endLine":20,"endColumn":35},{"ruleId":"128","severity":1,"message":"134","line":7,"column":16,"nodeType":"130","messageId":"131","endLine":7,"endColumn":19},{"ruleId":"128","severity":1,"message":"135","line":7,"column":21,"nodeType":"130","messageId":"131","endLine":7,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":19,"column":33,"nodeType":"139","messageId":"140","endLine":19,"endColumn":35},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'AppToolsData' is defined but never used.","Identifier","unusedVar","'Collapse' is defined but never used.","'NavLink' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NavbarBrand' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["143"],["144"],"no-global-assign","no-unsafe-negation"]