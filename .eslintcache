[{"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js":"1","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js":"2","S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js":"3","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js":"4","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js":"5","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js":"6","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js":"7","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js":"8","S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js":"9","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js":"10","S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js":"11","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js":"12","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js":"13","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\createComp.js":"14","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Container.js":"15","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EditButton.js":"16","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Col.js":"17","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\contentStateHelpers.js":"18","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\contReducerConstants.js":"19","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\index.js":"20","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\EmptyBlock.js":"21","S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\navReducerConstants.js":"22","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\ToolsDrawer.js":"23","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Grid.js":"24"},{"size":571,"mtime":1613983454954,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1369,"mtime":1614322187178,"results":"28","hashOfConfig":"26"},{"size":265,"mtime":1612761594791,"results":"29","hashOfConfig":"26"},{"size":1648,"mtime":1614411166435,"results":"30","hashOfConfig":"26"},{"size":142,"mtime":1612146062465,"results":"31","hashOfConfig":"26"},{"size":1730,"mtime":1614412252854,"results":"32","hashOfConfig":"26"},{"size":5149,"mtime":1614142013464,"results":"33","hashOfConfig":"26"},{"size":416,"mtime":1611122304047,"results":"34","hashOfConfig":"26"},{"size":2288,"mtime":1614404593341,"results":"35","hashOfConfig":"26"},{"size":519,"mtime":1613983611002,"results":"36","hashOfConfig":"26"},{"size":294,"mtime":1613624292705,"results":"37","hashOfConfig":"26"},{"size":1967,"mtime":1614227718745,"results":"38","hashOfConfig":"26"},{"size":449,"mtime":1613537171896,"results":"39","hashOfConfig":"26"},{"size":1990,"mtime":1614227724933,"results":"40","hashOfConfig":"26"},{"size":3541,"mtime":1614412701372,"results":"41","hashOfConfig":"26"},{"size":1666,"mtime":1614227714794,"results":"42","hashOfConfig":"26"},{"size":1701,"mtime":1614236406591,"results":"43","hashOfConfig":"26"},{"size":440,"mtime":1614406177200,"results":"44","hashOfConfig":"26"},{"size":234,"mtime":1614235508804,"results":"45","hashOfConfig":"26"},{"size":683,"mtime":1613623314040,"results":"46","hashOfConfig":"26"},{"size":105,"mtime":1613959438161,"results":"47","hashOfConfig":"26"},{"size":5536,"mtime":1614412471789,"results":"48","hashOfConfig":"26"},{"size":2404,"mtime":1614412857285,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1370067",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"S:\\Users\\gluke\\Projects\\frost\\client\\src\\index.js",[],["105","106"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reportWebVitals.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\App.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\contReducers.js",["107"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\contentActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppNavBar.js",["108"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { navActions, contActions } from '../actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\n/*~~~~~ Styles ~~~~~*/\r\nconst useStyles = makeStyles(theme => ({\r\n    appNav: {\r\n      flexGrow: 1,\r\n      backdropFilter: \"blur(10px)\"\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      outline: \"0px !important\"\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      textAlign: \"start\"\r\n    },\r\n    userMenu: {\r\n        color: \"black\",\r\n        outline: \"0px !important\",\r\n        textTransform: \"capitalize\",\r\n        fontSize: \"1rem\"\r\n    },\r\n    userPopper: {\r\n        backgroundColor: \"ghostwhite\"\r\n    }\r\n}));\r\n\r\n/*~~~~~ Components ~~~~~*/\r\nconst UserMenu = connect(null, {\r\n    toggleEditing: contActions.toggleEditing,\r\n    toggleTools: navActions.toggleTools\r\n})((props) => {\r\n    const style = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    \r\n    const handleToggle = () => {\r\n      setOpen(open => !open);\r\n    };\r\n  \r\n    const handleClose = (event) => {\r\n        if (!(anchorRef.current && anchorRef.current.contains(event.target))) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleEditing = () => {\r\n        props.toggleTools();\r\n        props.toggleEditing();\r\n        setOpen(false);\r\n    }\r\n  \r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n      if (prevOpen.current === true && open === false) {\r\n        anchorRef.current.focus();\r\n      }\r\n      prevOpen.current = open;\r\n    }, [open]);\r\n  \r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                ref={anchorRef}\r\n                aria-controls={open ? 'menu-list-grow' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleToggle}\r\n                className={style.userMenu}\r\n            >\r\n                <AccountCircleIcon/>\r\n                Luke\r\n            </Button>\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} placement=\"bottom-end\" transition disablePortal>\r\n                {({ TransitionProps }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{ transformOrigin: 'center top' }}\r\n                    >\r\n                        <Paper className={style.userPopper}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                    <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                                    <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n                                    <MenuItem onClick={handleEditing}>Edit Page</MenuItem>\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </React.Fragment>\r\n    );\r\n})\r\n\r\nfunction AppNavBar(props) {\r\n    const style = useStyles();\r\n\r\n    const toggleNav = () => {\r\n        props.toggleNav();\r\n    }\r\n\r\n    return (\r\n        <div className={style.appNav}>\r\n            <AppBar position=\"static\" color=\"transparent\">\r\n                <Toolbar>\r\n                    <IconButton className={style.menuButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={style.title}>\r\n                        Spades\r\n                    </Typography>\r\n                    <UserMenu />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nAppNavBar.propTypes = {\r\n    toggleNav: PropTypes.func.isRequired,\r\n    toggleTools: PropTypes.func.isRequired,\r\n    toggleEditing: PropTypes.func.isRequired,\r\n    navIsOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    navIsOpen: state.navState.navIsOpen\r\n})\r\n\r\n\r\n export default connect(mapStateToProps, {\r\n     toggleNav: navActions.toggleNav,\r\n     toggleTools: navActions.toggleTools,\r\n     toggleEditing: contActions.toggleEditing\r\n})(AppNavBar);","S:\\Users\\gluke\\Projects\\frost\\client\\src\\store.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\AppBody.js",["109"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\reducers\\navReducers.js",["110"],"import { produce } from 'immer';\r\nimport { INIT_STATE } from '../data/navReducerConstants';\r\n\r\nconst navReducer = produce((draft, action) => {\r\n    switch (action.type) {\r\n        case \"NAV/TOGGLE\":\r\n            draft.navIsOpen = !draft.navIsOpen;\r\n            return\r\n        case \"TOOLS/TOGGLE\":\r\n            draft.toolsOpen = !draft.toolsOpen;\r\n            return\r\n        case \"TOOLS/SET_VIEW\":\r\n            draft.toolsView = action.payload;\r\n            return\r\n    }\r\n}, INIT_STATE);\r\n\r\nexport default navReducer;","S:\\Users\\gluke\\Projects\\frost\\client\\src\\actions\\navActions.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Row.js",["111"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Row } from 'reactstrap';\r\nimport EditButton from '../EditButton';\r\nimport * as comp from './';\r\nimport { contActions } from '../../actions';\r\n\r\nclass RowComp extends React.Component {\r\n\r\n    style() {\r\n        var style={padding: \"10px\", margin: \"0\"};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                outline: \"2px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.children.length) {\r\n            this.props.insertComp('Col', this.props.id, null);\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <Row style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Row\" parentId={this.props.id} childId={null} />}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Row>);\r\n    }\r\n}\r\n\r\n\r\nRowComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string,\r\n    insertComp: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n});\r\n\r\nexport default connect(mapStateToProps, { insertComp: contActions.insertComp })(RowComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\createComp.js",[],["112","113"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Container.js",["114"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Container } from 'reactstrap';\r\nimport EditButton from '../EditButton';\r\nimport * as comp from './';\r\nimport { contActions } from '../../actions';\r\n\r\nclass ContainerComp extends React.Component {\r\n\r\n    style() {\r\n        var style={padding: \"10px\"};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                outline: \"2px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.children.length) {\r\n            this.props.insertComp('Row', this.props.id, null);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Container\" parentId={this.props.id} childId={null}/>}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Container>);\r\n    }\r\n}\r\n\r\n\r\nContainerComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string,\r\n    insertComp: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { insertComp: contActions.insertComp })(ContainerComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\EditButton.js",["115","116","117","118","119","120","121","122"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Col.js",["123"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport EditButton from '../EditButton';\r\nimport { Col } from 'reactstrap';\r\nimport * as comp from './';\r\n\r\nclass ColComp extends React.Component {\r\n\r\n    style() {\r\n        var style={};\r\n        if (this.props.editing){\r\n            style = {\r\n                ...style,\r\n                border: \"4px dashed ghostwhite\",\r\n                borderRadius: \"15px\"\r\n            }\r\n        }\r\n        if (this.props.selected == this.props.id) {\r\n            style = {\r\n                ...style,\r\n                outline: \"2px dashed lightblue\"\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Col style={this.style()}>\r\n                {this.props.editing && <EditButton compName=\"Col\" parentId={this.props.id} childId={null} />}\r\n                {this.props.children.map(child => React.createElement(comp[child.comp], child.props, child.inner))}                \r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nColComp.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string,\r\n    editing: PropTypes.bool.isRequired,\r\n    selected: PropTypes.string\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    children: state.contentState.contentComp[ownProps.id].childIds.map(id => state.contentState.contentComp[id]),\r\n    parentId: state.contentState.contentComp[ownProps.id].parentId,\r\n    editing: state.contentState.editing,\r\n    selected: state.contentState.selected\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ColComp);\r\n","S:\\Users\\gluke\\Projects\\frost\\client\\src\\helpers\\contentStateHelpers.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\contReducerConstants.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\index.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\EmptyBlock.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\data\\navReducerConstants.js",[],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\ToolsDrawer.js",["124"],"S:\\Users\\gluke\\Projects\\frost\\client\\src\\components\\content\\Grid.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":12,"column":5,"nodeType":"131","messageId":"132","endLine":47,"endColumn":6},{"ruleId":"133","severity":1,"message":"134","line":117,"column":11,"nodeType":"135","messageId":"136","endLine":117,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":48,"column":8,"nodeType":"139","endLine":48,"endColumn":10,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":5,"nodeType":"131","messageId":"132","endLine":15,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":20,"column":33,"nodeType":"143","messageId":"144","endLine":20,"endColumn":35},{"ruleId":"125","replacedBy":"145"},{"ruleId":"127","replacedBy":"146"},{"ruleId":"141","severity":1,"message":"142","line":20,"column":33,"nodeType":"143","messageId":"144","endLine":20,"endColumn":35},{"ruleId":"133","severity":1,"message":"147","line":13,"column":5,"nodeType":"135","messageId":"136","endLine":13,"endColumn":14},{"ruleId":"133","severity":1,"message":"148","line":13,"column":16,"nodeType":"135","messageId":"136","endLine":13,"endColumn":19},{"ruleId":"133","severity":1,"message":"149","line":13,"column":21,"nodeType":"135","messageId":"136","endLine":13,"endColumn":24},{"ruleId":"133","severity":1,"message":"150","line":14,"column":5,"nodeType":"135","messageId":"136","endLine":14,"endColumn":25},{"ruleId":"133","severity":1,"message":"151","line":14,"column":27,"nodeType":"135","messageId":"136","endLine":14,"endColumn":41},{"ruleId":"133","severity":1,"message":"152","line":14,"column":43,"nodeType":"135","messageId":"136","endLine":14,"endColumn":55},{"ruleId":"133","severity":1,"message":"153","line":14,"column":57,"nodeType":"135","messageId":"136","endLine":14,"endColumn":69},{"ruleId":"133","severity":1,"message":"154","line":16,"column":8,"nodeType":"135","messageId":"136","endLine":16,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":19,"column":33,"nodeType":"143","messageId":"144","endLine":19,"endColumn":35},{"ruleId":"141","severity":1,"message":"142","line":109,"column":80,"nodeType":"143","messageId":"144","endLine":109,"endColumn":82},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'toggleNav' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["157"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["155"],["156"],"'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'Delete' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: [props]",{"range":"160","text":"161"},[1170,1172],"[props]"]